image: docker:latest

services:
  - docker:dind

stages:
  - build
  - howitzer
  - upload

variables:
  BUILD_CONTAINER_IMAGE: computermouth/sudeb:stretch
  LINARO_URL: https://releases.linaro.org/components/toolchain/binaries/4.9-2017.01/arm-linux-gnueabihf/gcc-linaro-4.9.4-2017.01-x86_64_arm-linux-gnueabihf.tar.xz
  UPLOAD_CONTAINER: $CI_REGISTRY/nextthingco/ci-tools:stable
  ARTIFACT_0: ${CI_PROJECT_NAME}-${CI_BUILD_REF_SLUG}-b${CI_PIPELINE_ID}-Toshiba_4G_MLC.chp
  ARTIFACT_1: ${CI_PROJECT_NAME}-${CI_BUILD_REF_SLUG}-b${CI_PIPELINE_ID}-Hynix_8G_MLC.chp
  CHECK_DEPS: none

build:
  tags: [qemu-arm]
  stage: build
  script:
    - docker pull $BUILD_CONTAINER_IMAGE
    - docker run --privileged -v $PWD:/opt/builddir -w /opt/builddir --rm $BUILD_CONTAINER_IMAGE /bin/bash -c "sudo apt-get update -qq && sudo apt-get install -y git crossbuild-essential-armhf build-essential tar xz-utils live-build qemu-user-static device-tree-compiler bc mtd-utils sunxi-tools u-boot-tools android-tools-fastboot img2simg && ./build.sh"
    - ls
  artifacts:
    expire_in: 20 minutes
    paths:
      - chip-tools

howitzer:
  image: ntc-registry.githost.io/gadget/howitzer-container:master
  stage: howitzer
  dependencies:
    - build
  script:
    - cd chip-tools
    - ls output
    - /bin/bash ./chip-update-firmware.sh -L output/ -F Toshiba_4G_MLC
    - howitzer nand Toshiba_4G_MLC chp fel.chp chp fastboot.chp -f ${ARTIFACT_0}
    - ls
    - rm -rf fel.chp fastboot.chp
    - ls
    - /bin/bash ./chip-update-firmware.sh -L output/ -F Hynix_8G_MLC
    - howitzer nand Hynix_8G_MLC chp fel.chp chp fastboot.chp -f ${ARTIFACT_1}
    - rm -rf fel.chp fastboot.chp
    - ls
    - pwd
  artifacts:
    expire_in: 1 day
    paths:
    - /builds/nextthingco/chip-os-9-headless/chip-tools/${ARTIFACT_0}
    - README.md
    - chip-tools
    - ./${ARTIFACT_0}
    - ./${ARTIFACT_1}

upload:
  stage: upload
  script:
    - ls
    - echo "UPLOAD!!!"
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull $UPLOAD_CONTAINER
    - docker run
      -e GHVAR_AWS_ID=${GHVAR_AWS_ID}
      -e GHVAR_AWS_PW=${GHVAR_AWS_PW}
      -e GHVAR_AWS_REGION=${GHVAR_AWS_REGION}
      -e CI_PROJECT_NAME=${CI_PROJECT_NAME}
      -e CI_BUILD_REF_NAME=${CI_BUILD_REF_SLUG}
      -e CI_BUILD_ID=${CI_BUILD_ID}
      -e ARTIFACT_0=${ARTIFACT_0}
      -e ARTIFACT_1=${ARTIFACT_1}
      --rm -v $PWD:/upload -w /upload
      $UPLOAD_CONTAINER ci-s3-upload
      ${ARTIFACT_0}
      ${ARTIFACT_1}
